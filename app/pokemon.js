function BaseStats(baseStamina, baseAttack, baseDefense) {
  this.baseStamina = parseInt(baseStamina, 10);
  this.baseAttack = parseInt(baseAttack, 10);
  this.baseDefence = parseInt(baseDefense, 10);
}

const calculateMaxCPMultiplier = (attack, defence, stamina) => (
  attack * Math.sqrt(defence) * Math.sqrt(stamina)
);

const calculateCP = (adsMultiplier, CPMultiplier) => (
  Math.max(Math.floor(0.1 * adsMultiplier * Math.pow(CPMultiplier, 2)), 10)
);

const calculateCPPerfection = (maxCP, minCP, curCP) => (
  (curCP - minCP) / (maxCP - minCP) * 100.0
);

const getBaseStats = (id) => {
  switch (id) {
    case 1: return new BaseStats(90, 126, 126);
    case 2: return new BaseStats(120, 156, 158);
    case 3: return new BaseStats(160, 198, 200);
    case 4: return new BaseStats(78, 128, 108);
    case 5: return new BaseStats(116, 160, 140);
    case 6: return new BaseStats(156, 212, 182);
    case 7: return new BaseStats(88, 112, 142);
    case 8: return new BaseStats(118, 144, 176);
    case 9: return new BaseStats(158, 186, 222);
    case 10: return new BaseStats(90, 62, 66);
    case 11: return new BaseStats(100, 56, 86);
    case 12: return new BaseStats(120, 144, 144);
    case 13: return new BaseStats(80, 68, 64);
    case 14: return new BaseStats(90, 62, 82);
    case 15: return new BaseStats(130, 144, 130);
    case 16: return new BaseStats(80, 94, 90);
    case 17: return new BaseStats(126, 126, 122);
    case 18: return new BaseStats(166, 170, 166);
    case 19: return new BaseStats(60, 92, 86);
    case 20: return new BaseStats(110, 146, 150);
    case 21: return new BaseStats(80, 102, 78);
    case 22: return new BaseStats(130, 168, 146);
    case 23: return new BaseStats(70, 112, 112);
    case 24: return new BaseStats(120, 166, 166);
    case 25: return new BaseStats(70, 124, 108);
    case 26: return new BaseStats(120, 200, 154);
    case 27: return new BaseStats(100, 90, 114);
    case 28: return new BaseStats(150, 150, 172);
    case 29: return new BaseStats(110, 100, 104);
    case 30: return new BaseStats(140, 132, 136);
    case 31: return new BaseStats(180, 184, 190);
    case 32: return new BaseStats(92, 110, 94);
    case 33: return new BaseStats(122, 142, 128);
    case 34: return new BaseStats(162, 204, 170);
    case 35: return new BaseStats(140, 116, 124);
    case 36: return new BaseStats(190, 178, 178);
    case 37: return new BaseStats(76, 106, 118);
    case 38: return new BaseStats(146, 176, 194);
    case 39: return new BaseStats(230, 98, 54);
    case 40: return new BaseStats(280, 168, 108);
    case 41: return new BaseStats(80, 88, 90);
    case 42: return new BaseStats(150, 164, 164);
    case 43: return new BaseStats(90, 134, 130);
    case 44: return new BaseStats(120, 162, 158);
    case 45: return new BaseStats(150, 202, 190);
    case 46: return new BaseStats(70, 122, 120);
    case 47: return new BaseStats(120, 162, 170);
    case 48: return new BaseStats(120, 108, 118);
    case 49: return new BaseStats(140, 172, 154);
    case 50: return new BaseStats(20, 108, 86);
    case 51: return new BaseStats(70, 148, 140);
    case 52: return new BaseStats(80, 104, 94);
    case 53: return new BaseStats(130, 156, 146);
    case 54: return new BaseStats(100, 132, 112);
    case 55: return new BaseStats(160, 194, 176);
    case 56: return new BaseStats(80, 122, 96);
    case 57: return new BaseStats(130, 178, 150);
    case 58: return new BaseStats(110, 156, 110);
    case 59: return new BaseStats(180, 230, 180);
    case 60: return new BaseStats(80, 108, 98);
    case 61: return new BaseStats(130, 132, 132);
    case 62: return new BaseStats(180, 180, 202);
    case 63: return new BaseStats(50, 110, 76);
    case 64: return new BaseStats(80, 150, 112);
    case 65: return new BaseStats(110, 186, 152);
    case 66: return new BaseStats(140, 118, 96);
    case 67: return new BaseStats(160, 154, 144);
    case 68: return new BaseStats(180, 198, 180);
    case 69: return new BaseStats(100, 158, 78);
    case 70: return new BaseStats(130, 190, 110);
    case 71: return new BaseStats(160, 222, 152);
    case 72: return new BaseStats(80, 106, 136);
    case 73: return new BaseStats(160, 170, 196);
    case 74: return new BaseStats(80, 106, 118);
    case 75: return new BaseStats(110, 142, 156);
    case 76: return new BaseStats(160, 176, 198);
    case 77: return new BaseStats(100, 168, 138);
    case 78: return new BaseStats(130, 200, 170);
    case 79: return new BaseStats(180, 110, 110);
    case 80: return new BaseStats(190, 184, 198);
    case 81: return new BaseStats(50, 128, 138);
    case 82: return new BaseStats(100, 186, 180);
    case 83: return new BaseStats(104, 138, 132);
    case 84: return new BaseStats(70, 126, 96);
    case 85: return new BaseStats(120, 182, 150);
    case 86: return new BaseStats(130, 104, 138);
    case 87: return new BaseStats(180, 156, 192);
    case 88: return new BaseStats(160, 124, 110);
    case 89: return new BaseStats(210, 180, 188);
    case 90: return new BaseStats(60, 120, 112);
    case 91: return new BaseStats(100, 196, 196);
    case 92: return new BaseStats(60, 136, 82);
    case 93: return new BaseStats(90, 172, 118);
    case 94: return new BaseStats(120, 204, 156);
    case 95: return new BaseStats(70, 90, 186);
    case 96: return new BaseStats(120, 104, 140);
    case 97: return new BaseStats(170, 162, 196);
    case 98: return new BaseStats(60, 116, 110);
    case 99: return new BaseStats(110, 178, 168);
    case 100: return new BaseStats(80, 102, 124);
    case 101: return new BaseStats(120, 150, 174);
    case 102: return new BaseStats(120, 110, 132);
    case 103: return new BaseStats(190, 232, 164);
    case 104: return new BaseStats(100, 102, 150);
    case 105: return new BaseStats(120, 140, 202);
    case 106: return new BaseStats(100, 148, 172);
    case 107: return new BaseStats(100, 138, 204);
    case 108: return new BaseStats(180, 126, 160);
    case 109: return new BaseStats(80, 136, 142);
    case 110: return new BaseStats(130, 190, 198);
    case 111: return new BaseStats(160, 110, 116);
    case 112: return new BaseStats(210, 166, 160);
    case 113: return new BaseStats(500, 40, 60);
    case 114: return new BaseStats(130, 164, 152);
    case 115: return new BaseStats(210, 142, 178);
    case 116: return new BaseStats(60, 122, 100);
    case 117: return new BaseStats(110, 176, 150);
    case 118: return new BaseStats(90, 112, 126);
    case 119: return new BaseStats(160, 172, 160);
    case 120: return new BaseStats(60, 130, 128);
    case 121: return new BaseStats(120, 194, 192);
    case 122: return new BaseStats(80, 154, 196);
    case 123: return new BaseStats(140, 176, 180);
    case 124: return new BaseStats(130, 172, 134);
    case 125: return new BaseStats(130, 198, 160);
    case 126: return new BaseStats(130, 214, 158);
    case 127: return new BaseStats(130, 184, 186);
    case 128: return new BaseStats(150, 148, 184);
    case 129: return new BaseStats(40, 42, 84);
    case 130: return new BaseStats(190, 192, 196);
    case 131: return new BaseStats(260, 186, 190);
    case 132: return new BaseStats(96, 110, 110);
    case 133: return new BaseStats(110, 114, 128);
    case 134: return new BaseStats(260, 186, 168);
    case 135: return new BaseStats(130, 192, 174);
    case 136: return new BaseStats(130, 238, 178);
    case 137: return new BaseStats(130, 156, 158);
    case 138: return new BaseStats(70, 132, 160);
    case 139: return new BaseStats(140, 180, 202);
    case 140: return new BaseStats(60, 148, 142);
    case 141: return new BaseStats(120, 190, 190);
    case 142: return new BaseStats(160, 182, 162);
    case 143: return new BaseStats(320, 180, 180);
    case 144: return new BaseStats(180, 198, 242);
    case 145: return new BaseStats(180, 232, 194);
    case 146: return new BaseStats(180, 242, 194);
    case 147: return new BaseStats(82, 128, 110);
    case 148: return new BaseStats(122, 170, 152);
    case 149: return new BaseStats(182, 250, 212);
    case 150: return new BaseStats(212, 284, 202);
    case 151: return new BaseStats(200, 220, 220);
    default: return null;
  }
};

const getName = (id) => {
  switch (id) {
    case 1: return 'Bulbasaur';
    case 2: return 'Ivysaur';
    case 3: return 'Venusaur';
    case 4: return 'Charmander';
    case 5: return 'Charmeleon';
    case 6: return 'Charizard';
    case 7: return 'Squirtle';
    case 8: return 'Wartortle';
    case 9: return 'Blastoise';
    case 10: return 'Caterpie';
    case 11: return 'Metapod';
    case 12: return 'Butterfree';
    case 13: return 'Weedle';
    case 14: return 'Kakuna';
    case 15: return 'Beedrill';
    case 16: return 'Pidgey';
    case 17: return 'Pidgeotto';
    case 18: return 'Pidgeot';
    case 19: return 'Rattata';
    case 20: return 'Raticate';
    case 21: return 'Spearow';
    case 22: return 'Fearow';
    case 23: return 'Ekans';
    case 24: return 'Arbok';
    case 25: return 'Pikachu';
    case 26: return 'Raichu';
    case 27: return 'Sandshrew';
    case 28: return 'Sandslash';
    case 29: return 'Nidoran♀';
    case 30: return 'Nidorina';
    case 31: return 'Nidoqueen';
    case 32: return 'Nidoran♂';
    case 33: return 'Nidorino';
    case 34: return 'Nidoking';
    case 35: return 'Clefairy';
    case 36: return 'Clefable';
    case 37: return 'Vulpix';
    case 38: return 'Ninetales';
    case 39: return 'Jigglypuff';
    case 40: return 'Wigglytuff';
    case 41: return 'Zubat';
    case 42: return 'Golbat';
    case 43: return 'Oddish';
    case 44: return 'Gloom';
    case 45: return 'Vileplume';
    case 46: return 'Paras';
    case 47: return 'Parasect';
    case 48: return 'Venonat';
    case 49: return 'Venomoth';
    case 50: return 'Diglett';
    case 51: return 'Dugtrio';
    case 52: return 'Meowth';
    case 53: return 'Persian';
    case 54: return 'Psyduck';
    case 55: return 'Golduck';
    case 56: return 'Mankey';
    case 57: return 'Primeape';
    case 58: return 'Growlithe';
    case 59: return 'Arcanine';
    case 60: return 'Poliwag';
    case 61: return 'Poliwhirl';
    case 62: return 'Poliwrath';
    case 63: return 'Abra';
    case 64: return 'Kadabra';
    case 65: return 'Alakazam';
    case 66: return 'Machop';
    case 67: return 'Machoke';
    case 68: return 'Machamp';
    case 69: return 'Bellsprout';
    case 70: return 'Weepinbell';
    case 71: return 'Victreebel';
    case 72: return 'Tentacool';
    case 73: return 'Tentacruel';
    case 74: return 'Geodude';
    case 75: return 'Graveler';
    case 76: return 'Golem';
    case 77: return 'Ponyta';
    case 78: return 'Rapidash';
    case 79: return 'Slowpoke';
    case 80: return 'Slowbro';
    case 81: return 'Magnemite';
    case 82: return 'Magneton';
    case 83: return 'Farfetch\'d';
    case 84: return 'Doduo';
    case 85: return 'Dodrio';
    case 86: return 'Seel';
    case 87: return 'Dewgong';
    case 88: return 'Grimer';
    case 89: return 'Muk';
    case 90: return 'Shellder';
    case 91: return 'Cloyster';
    case 92: return 'Gastly';
    case 93: return 'Haunter';
    case 94: return 'Gengar';
    case 95: return 'Onix';
    case 96: return 'Drowzee';
    case 97: return 'Hypno';
    case 98: return 'Krabby';
    case 99: return 'Kingler';
    case 100: return 'Voltorb';
    case 101: return 'Electrode';
    case 102: return 'Exeggcute';
    case 103: return 'Exeggutor';
    case 104: return 'Cubone';
    case 105: return 'Marowak';
    case 106: return 'Hitmonlee';
    case 107: return 'Hitmonchan';
    case 108: return 'Lickitung';
    case 109: return 'Koffing';
    case 110: return 'Weezing';
    case 111: return 'Rhyhorn';
    case 112: return 'Rhydon';
    case 113: return 'Chansey';
    case 114: return 'Tangela';
    case 115: return 'Kangaskhan';
    case 116: return 'Horsea';
    case 117: return 'Seadra';
    case 118: return 'Goldeen';
    case 119: return 'Seaking';
    case 120: return 'Staryu';
    case 121: return 'Starmie';
    case 122: return 'Mr. Mime';
    case 123: return 'Scyther';
    case 124: return 'Jynx';
    case 125: return 'Electabuzz';
    case 126: return 'Magmar';
    case 127: return 'Pinsir';
    case 128: return 'Tauros';
    case 129: return 'Magikarp';
    case 130: return 'Gyarados';
    case 131: return 'Lapras';
    case 132: return 'Ditto';
    case 133: return 'Eevee';
    case 134: return 'Vaporeon';
    case 135: return 'Jolteon';
    case 136: return 'Flareon';
    case 137: return 'Porygon';
    case 138: return 'Omanyte';
    case 139: return 'Omastar';
    case 140: return 'Kabuto';
    case 141: return 'Kabutops';
    case 142: return 'Aerodactyl';
    case 143: return 'Snorlax';
    case 144: return 'Articuno';
    case 145: return 'Zapdos';
    case 146: return 'Moltres';
    case 147: return 'Dratini';
    case 148: return 'Dragonair';
    case 149: return 'Dragonite';
    case 150: return 'Mewtwo';
    case 151: return 'Mew';
    default: return null;
  }
};

const getZhName = (id) => {
  switch (id) {
    case 1: return '妙蛙种子';
    case 2: return '妙蛙草';
    case 3: return '妙蛙花';
    case 4: return '小火龙';
    case 5: return '火恐龙';
    case 6: return '喷火龙';
    case 7: return '杰尼龟';
    case 8: return '卡咪龟';
    case 9: return '水箭龟';
    case 10: return '绿毛虫';
    case 11: return '铁甲蛹';
    case 12: return '巴大蝴';
    case 13: return '独角虫';
    case 14: return '铁壳昆';
    case 15: return '大针蜂';
    case 16: return '波波';
    case 17: return '比比鸟';
    case 18: return '比雕';
    case 19: return '小拉达';
    case 20: return '拉达';
    case 21: return '烈雀';
    case 22: return '大嘴雀';
    case 23: return '阿柏蛇';
    case 24: return '阿柏怪';
    case 25: return '皮卡丘';
    case 26: return '雷丘';
    case 27: return '穿山鼠';
    case 28: return '穿山王';
    case 29: return '尼多兰';
    case 30: return '尼多娜';
    case 31: return '尼多后';
    case 32: return '尼多郎';
    case 33: return '尼多力诺';
    case 34: return '尼多王';
    case 35: return '皮皮';
    case 36: return '皮可西';
    case 37: return '六尾';
    case 38: return '九尾';
    case 39: return '胖丁';
    case 40: return '胖可丁';
    case 41: return '超音蝠';
    case 42: return '大嘴蝠';
    case 43: return '走路草';
    case 44: return '臭臭花';
    case 45: return '霸王花';
    case 46: return '派拉斯';
    case 47: return '派拉斯特';
    case 48: return '毛球';
    case 49: return '末入蛾';
    case 50: return '地鼠';
    case 51: return '三地鼠';
    case 52: return '喵喵';
    case 53: return '猫老大';
    case 54: return '可达鸭';
    case 55: return '哥达鸭';
    case 56: return '猴怪';
    case 57: return '火爆猴';
    case 58: return '卡蒂狗';
    case 59: return '风速狗';
    case 60: return '蚊香蝌蚪';
    case 61: return '蚊香蛙';
    case 62: return '快泳蛙';
    case 63: return '凯西';
    case 64: return '勇吉拉';
    case 65: return '胡地';
    case 66: return '腕力';
    case 67: return '豪力';
    case 68: return '怪力';
    case 69: return '喇叭芽';
    case 70: return '口呆花';
    case 71: return '大食花';
    case 72: return '玛瑙水母';
    case 73: return '毒刺水母';
    case 74: return '小拳石';
    case 75: return '隆隆石';
    case 76: return '隆隆岩';
    case 77: return '小火马';
    case 78: return '烈焰马';
    case 79: return '呆呆兽';
    case 80: return '呆河马';
    case 81: return '小磁怪';
    case 82: return '三合一磁怪';
    case 83: return '大葱鸭';
    case 84: return '嘟嘟';
    case 85: return '嘟嘟利';
    case 86: return '小海狮';
    case 87: return '白海狮';
    case 88: return '臭泥';
    case 89: return '臭臭泥';
    case 90: return '大舌贝';
    case 91: return '铁甲贝';
    case 92: return '鬼斯';
    case 93: return '鬼斯通';
    case 94: return '耿鬼';
    case 95: return '大岩蛇';
    case 96: return '素利普';
    case 97: return '素利拍';
    case 98: return '大钳蟹';
    case 99: return '巨钳蟹';
    case 100: return '雷电球';
    case 101: return '顽皮弹';
    case 102: return '蛋蛋';
    case 103: return '椰蛋树';
    case 104: return '可拉可拉';
    case 105: return '嘎拉嘎拉';
    case 106: return '沙瓦郎';
    case 107: return '艾比郎';
    case 108: return '大舌头';
    case 109: return '瓦斯弹';
    case 110: return '双弹瓦斯';
    case 111: return '铁甲犀牛';
    case 112: return '铁甲暴龙';
    case 113: return '吉利蛋';
    case 114: return '蔓藤怪';
    case 115: return '袋龙';
    case 116: return '墨海马';
    case 117: return '海刺龙';
    case 118: return '角金鱼';
    case 119: return '金鱼王';
    case 120: return '海星星';
    case 121: return '宝石海星';
    case 122: return '吸盘魔偶';
    case 123: return '飞天螳螂';
    case 124: return '迷唇姐';
    case 125: return '电击兽';
    case 126: return '鸭嘴火龙';
    case 127: return '大甲';
    case 128: return '肯泰罗';
    case 129: return '鲤鱼王';
    case 130: return '暴鲤龙';
    case 131: return '乘龙';
    case 132: return '百变怪';
    case 133: return '伊布';
    case 134: return '水精灵';
    case 135: return '雷精灵';
    case 136: return '火精灵';
    case 137: return '3D龙';
    case 138: return '菊石兽';
    case 139: return '多刺菊石兽';
    case 140: return '化石盔';
    case 141: return '镰刀盔';
    case 142: return '化石翼龙';
    case 143: return '卡比兽';
    case 144: return '急冻鸟';
    case 145: return '闪电鸟';
    case 146: return '火焰鸟';
    case 147: return '迷你龙';
    case 148: return '哈克龙';
    case 149: return '快龙';
    case 150: return '超梦';
    case 151: return '梦幻';
    default: return null;
  }
};

export default function Pokemon(pokemon) {
  this.id = pokemon.id.toString();

  this.individualATK = pokemon.individual_attack || 0;
  this.individualDEF = pokemon.individual_defense || 0;
  this.individualSTA = pokemon.individual_stamina || 0;

  this.baseStats = getBaseStats(pokemon.pokemon_id);
  this.name = getName(pokemon.pokemon_id);
  this.zhName = getZhName(pokemon.pokemon_id);

  this.creationTime = pokemon.creation_time_ms.toNumber();

  this.CPMultiplier = pokemon.cp_multiplier + pokemon.additional_cp_multiplier;
  this.maxCPMultiplier = calculateMaxCPMultiplier(
    this.baseStats.baseAttack + 15,
    this.baseStats.baseDefence + 15,
    this.baseStats.baseStamina + 15
  );
  this.minCPMultiplier = calculateMaxCPMultiplier(
    this.baseStats.baseAttack,
    this.baseStats.baseDefence,
    this.baseStats.baseStamina
  );
  this.curCPMultiplier = calculateMaxCPMultiplier(
    this.baseStats.baseAttack + pokemon.individual_attack,
    this.baseStats.baseDefence + pokemon.individual_defense,
    this.baseStats.baseStamina + pokemon.individual_stamina
  );

  this.maxCP = calculateCP(this.maxCPMultiplier, this.CPMultiplier);
  this.minCP = calculateCP(this.minCPMultiplier, this.CPMultiplier);
  this.curCP = calculateCP(this.curCPMultiplier, this.CPMultiplier);

  this.CPPerfection = calculateCPPerfection(this.maxCP, this.minCP, this.curCP);
  this.IVPerfection = ((pokemon.individual_attack + pokemon.individual_defense
    + pokemon.individual_stamina) / 45.0) * 100.0;
}
